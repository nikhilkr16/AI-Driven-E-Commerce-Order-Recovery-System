version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: ecommerce_db
    environment:
      POSTGRES_DB: ecommerce_recovery
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce_network

  # FastAPI Backend
  api:
    build: .
    container_name: ecommerce_api
    command: ["/app/start.sh", "api"]
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://admin:password123@postgres:5432/ecommerce_recovery
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    networks:
      - ecommerce_network

  # Streamlit Dashboard
  dashboard:
    build: .
    container_name: ecommerce_dashboard
    command: ["/app/start.sh", "dashboard"]
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000
    depends_on:
      - api
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    networks:
      - ecommerce_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ecommerce_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - dashboard
    networks:
      - ecommerce_network

volumes:
  postgres_data:

networks:
  ecommerce_network:
    driver: bridge
